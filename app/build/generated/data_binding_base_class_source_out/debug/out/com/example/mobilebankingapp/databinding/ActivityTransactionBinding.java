// Generated by view binder compiler. Do not edit!
package com.example.mobilebankingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mobilebankingapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTransactionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView accNumber;

  @NonNull
  public final EditText amountEt;

  @NonNull
  public final TextView amountTil;

  @NonNull
  public final TextInputLayout amountToSend;

  @NonNull
  public final MaterialCardView amountToSendCard;

  @NonNull
  public final MaterialCardView balanceCard;

  @NonNull
  public final AutoCompleteTextView categoryAct;

  @NonNull
  public final TextView currBalTil;

  @NonNull
  public final TextView currBalance;

  @NonNull
  public final TextView dollarSign;

  @NonNull
  public final View horizontalBar;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final EditText recipientAccNumberEt;

  @NonNull
  public final TextInputLayout recipientAccNumberTitle;

  @NonNull
  public final MaterialCardView recipientCard;

  @NonNull
  public final TextView recipientLabel;

  @NonNull
  public final EditText recipientNameEt;

  @NonNull
  public final TextInputLayout recipientNameTitle;

  @NonNull
  public final ImageButton toolbarBackBtn;

  @NonNull
  public final RelativeLayout toolbarRl;

  @NonNull
  public final TextView toolbarTitleTv;

  @NonNull
  public final MaterialButton transferBtn;

  @NonNull
  public final TextInputLayout trnCategoryTil;

  private ActivityTransactionBinding(@NonNull RelativeLayout rootView, @NonNull TextView accNumber,
      @NonNull EditText amountEt, @NonNull TextView amountTil,
      @NonNull TextInputLayout amountToSend, @NonNull MaterialCardView amountToSendCard,
      @NonNull MaterialCardView balanceCard, @NonNull AutoCompleteTextView categoryAct,
      @NonNull TextView currBalTil, @NonNull TextView currBalance, @NonNull TextView dollarSign,
      @NonNull View horizontalBar, @NonNull RelativeLayout main,
      @NonNull EditText recipientAccNumberEt, @NonNull TextInputLayout recipientAccNumberTitle,
      @NonNull MaterialCardView recipientCard, @NonNull TextView recipientLabel,
      @NonNull EditText recipientNameEt, @NonNull TextInputLayout recipientNameTitle,
      @NonNull ImageButton toolbarBackBtn, @NonNull RelativeLayout toolbarRl,
      @NonNull TextView toolbarTitleTv, @NonNull MaterialButton transferBtn,
      @NonNull TextInputLayout trnCategoryTil) {
    this.rootView = rootView;
    this.accNumber = accNumber;
    this.amountEt = amountEt;
    this.amountTil = amountTil;
    this.amountToSend = amountToSend;
    this.amountToSendCard = amountToSendCard;
    this.balanceCard = balanceCard;
    this.categoryAct = categoryAct;
    this.currBalTil = currBalTil;
    this.currBalance = currBalance;
    this.dollarSign = dollarSign;
    this.horizontalBar = horizontalBar;
    this.main = main;
    this.recipientAccNumberEt = recipientAccNumberEt;
    this.recipientAccNumberTitle = recipientAccNumberTitle;
    this.recipientCard = recipientCard;
    this.recipientLabel = recipientLabel;
    this.recipientNameEt = recipientNameEt;
    this.recipientNameTitle = recipientNameTitle;
    this.toolbarBackBtn = toolbarBackBtn;
    this.toolbarRl = toolbarRl;
    this.toolbarTitleTv = toolbarTitleTv;
    this.transferBtn = transferBtn;
    this.trnCategoryTil = trnCategoryTil;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accNumber;
      TextView accNumber = ViewBindings.findChildViewById(rootView, id);
      if (accNumber == null) {
        break missingId;
      }

      id = R.id.amountEt;
      EditText amountEt = ViewBindings.findChildViewById(rootView, id);
      if (amountEt == null) {
        break missingId;
      }

      id = R.id.amountTil;
      TextView amountTil = ViewBindings.findChildViewById(rootView, id);
      if (amountTil == null) {
        break missingId;
      }

      id = R.id.amountToSend;
      TextInputLayout amountToSend = ViewBindings.findChildViewById(rootView, id);
      if (amountToSend == null) {
        break missingId;
      }

      id = R.id.amountToSendCard;
      MaterialCardView amountToSendCard = ViewBindings.findChildViewById(rootView, id);
      if (amountToSendCard == null) {
        break missingId;
      }

      id = R.id.balanceCard;
      MaterialCardView balanceCard = ViewBindings.findChildViewById(rootView, id);
      if (balanceCard == null) {
        break missingId;
      }

      id = R.id.categoryAct;
      AutoCompleteTextView categoryAct = ViewBindings.findChildViewById(rootView, id);
      if (categoryAct == null) {
        break missingId;
      }

      id = R.id.currBalTil;
      TextView currBalTil = ViewBindings.findChildViewById(rootView, id);
      if (currBalTil == null) {
        break missingId;
      }

      id = R.id.currBalance;
      TextView currBalance = ViewBindings.findChildViewById(rootView, id);
      if (currBalance == null) {
        break missingId;
      }

      id = R.id.dollarSign;
      TextView dollarSign = ViewBindings.findChildViewById(rootView, id);
      if (dollarSign == null) {
        break missingId;
      }

      id = R.id.horizontalBar;
      View horizontalBar = ViewBindings.findChildViewById(rootView, id);
      if (horizontalBar == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.recipientAccNumberEt;
      EditText recipientAccNumberEt = ViewBindings.findChildViewById(rootView, id);
      if (recipientAccNumberEt == null) {
        break missingId;
      }

      id = R.id.recipientAccNumberTitle;
      TextInputLayout recipientAccNumberTitle = ViewBindings.findChildViewById(rootView, id);
      if (recipientAccNumberTitle == null) {
        break missingId;
      }

      id = R.id.recipientCard;
      MaterialCardView recipientCard = ViewBindings.findChildViewById(rootView, id);
      if (recipientCard == null) {
        break missingId;
      }

      id = R.id.recipientLabel;
      TextView recipientLabel = ViewBindings.findChildViewById(rootView, id);
      if (recipientLabel == null) {
        break missingId;
      }

      id = R.id.recipientNameEt;
      EditText recipientNameEt = ViewBindings.findChildViewById(rootView, id);
      if (recipientNameEt == null) {
        break missingId;
      }

      id = R.id.recipientNameTitle;
      TextInputLayout recipientNameTitle = ViewBindings.findChildViewById(rootView, id);
      if (recipientNameTitle == null) {
        break missingId;
      }

      id = R.id.toolbarBackBtn;
      ImageButton toolbarBackBtn = ViewBindings.findChildViewById(rootView, id);
      if (toolbarBackBtn == null) {
        break missingId;
      }

      id = R.id.toolbarRl;
      RelativeLayout toolbarRl = ViewBindings.findChildViewById(rootView, id);
      if (toolbarRl == null) {
        break missingId;
      }

      id = R.id.toolbarTitleTv;
      TextView toolbarTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitleTv == null) {
        break missingId;
      }

      id = R.id.transferBtn;
      MaterialButton transferBtn = ViewBindings.findChildViewById(rootView, id);
      if (transferBtn == null) {
        break missingId;
      }

      id = R.id.trnCategoryTil;
      TextInputLayout trnCategoryTil = ViewBindings.findChildViewById(rootView, id);
      if (trnCategoryTil == null) {
        break missingId;
      }

      return new ActivityTransactionBinding((RelativeLayout) rootView, accNumber, amountEt,
          amountTil, amountToSend, amountToSendCard, balanceCard, categoryAct, currBalTil,
          currBalance, dollarSign, horizontalBar, main, recipientAccNumberEt,
          recipientAccNumberTitle, recipientCard, recipientLabel, recipientNameEt,
          recipientNameTitle, toolbarBackBtn, toolbarRl, toolbarTitleTv, transferBtn,
          trnCategoryTil);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
